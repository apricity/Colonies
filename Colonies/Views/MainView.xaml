<Controls:MetroWindow x:Class="Wacton.Colonies.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:Converters="clr-namespace:Wacton.Colonies.Converters"
        xmlns:Views="clr-namespace:Wacton.Colonies.Views"
        xmlns:DesignTime="clr-namespace:Wacton.Colonies.DesignTime"
        mc:Ignorable="d" 
        Title="Wacton.Colonies" Height="350" Width="900" WindowStartupLocation="CenterScreen"
        Icon="/Resources/Icon.ico" ShowTitleBar="True" ShowIconOnTitleBar="True"
        d:DataContext="{Binding Source={StaticResource DesignTimeViewModelLocator}, Path=MainViewModel}">
        <!-- "snoop" used to determine a good startup height and width -->

    <Window.Resources>
        <ResourceDictionary>
            <DesignTime:DesignTimeViewModelLocator x:Key="DesignTimeViewModelLocator"/>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Violet.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseDark.xaml" />

                <ResourceDictionary Source="/Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="Space" Command="{Binding ToggleEcosystemCommand}"/>
        <KeyBinding Key="Add" Command="{Binding IncreaseTurnIntervalCommand}"/>
        <KeyBinding Key="OemPlus" Command="{Binding IncreaseTurnIntervalCommand}"/>
        <KeyBinding Key="Subtract" Command="{Binding DecreaseTurnIntervalCommand}"/>
        <KeyBinding Key="OemMinus" Command="{Binding DecreaseTurnIntervalCommand}"/>
    </Window.InputBindings>

    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button Content="Settings" Click="ShowSettings"/>
            <Button Content="Debug" Click="ShowDebug"/>
            <Button Content="God Mode" IsEnabled="False"/>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>

    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>

            <Controls:Flyout Header="Settings" Position="Bottom" IsPinned="False">
                <Grid Margin="3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="200"/>
                    </Grid.ColumnDefinitions>

                    <Grid.Resources>
                        <Converters:BoolToActiveStringConverter x:Key="BoolToActiveStringConverter" />
                        <Converters:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
                    
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Margin" Value="3,3,3,3"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                        </Style>   
                    </Grid.Resources>

                    <!--<Grid.ShowGridLines>True</Grid.ShowGridLines>-->

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="State:"/>
                    <ToggleButton Grid.Row="0" Grid.Column="1" IsChecked="{Binding IsEcosystemActive}"
                                  Content="{Binding IsEcosystemActive, Converter={StaticResource BoolToActiveStringConverter}}" Margin="3"/>

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Interval:"/>
                    <Slider Grid.Row="1" Grid.Column="1" Value="{Binding EcosystemTurnInterval}" 
                            Minimum="1" Maximum="2000" AutoToolTipPlacement="BottomRight" FlowDirection="RightToLeft" Margin="3"/>

                    <!-- TODO: wrap each of these in a common control -->
                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Health Deterioration Rate:"/>
                    <DockPanel Grid.Row="2" Grid.Column="1" HorizontalAlignment="Stretch" Margin="3" Dock="Right">
                        <TextBlock Text="1 /"/>
                        <TextBox Text="{Binding HealthDeteriorationDemoninator, UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Color="#00FF00" Offset="0.0"/>
                                    <GradientStop Color="#FFFF00" Offset="0.5"/>
                                    <GradientStop Color="#FF0000" Offset="1.0"/>
                                </LinearGradientBrush>
                            </TextBox.Background>
                        </TextBox>
                    </DockPanel>

                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Pheromone Deposit Rate:"/>
                    <DockPanel Grid.Row="3" Grid.Column="1" HorizontalAlignment="Stretch" Margin="3" Dock="Right">
                        <TextBlock Text="1 /"/>
                        <TextBox Text="{Binding PheromoneDepositDemoninator, UpdateSourceTrigger=PropertyChanged}"
                                 Background="{Binding PheromoneColor, Converter={StaticResource ColorToBrushConverter}}"/>
                    </DockPanel>

                    <TextBlock Grid.Row="4" Grid.Column="0" Text="Pheromone Fade Rate:"/>
                    <DockPanel Grid.Row="4" Grid.Column="1" HorizontalAlignment="Stretch" Margin="3" Dock="Right">
                        <TextBlock Text="1 /"/>
                        <TextBox Text="{Binding PheromoneFadeDemoninator, UpdateSourceTrigger=PropertyChanged}"
                                 Background="{Binding PheromoneColor, Converter={StaticResource ColorToBrushConverter}}"/>
                    </DockPanel>

                    <TextBlock Grid.Row="5" Grid.Column="0" Text="Nutrient Form Rate:"/>
                    <DockPanel Grid.Row="5" Grid.Column="1" HorizontalAlignment="Stretch" Margin="3" Dock="Right">
                        <TextBlock Text="1 /"/>
                        <TextBox Text="{Binding NutrientGrowthDemoninator, UpdateSourceTrigger=PropertyChanged}"
                                 Background="{Binding NutrientColor, Converter={StaticResource ColorToBrushConverter}}"/>
                    </DockPanel>

                    <TextBlock Grid.Row="6" Grid.Column="0" Text="Mineral Growth Rate:"/>
                    <DockPanel Grid.Row="6" Grid.Column="1" HorizontalAlignment="Stretch" Margin="3" Dock="Right">
                        <TextBlock Text="1 /"/>
                        <TextBox Text="{Binding MineralFormDemoninator, UpdateSourceTrigger=PropertyChanged}"
                                 Background="{Binding MineralColor, Converter={StaticResource ColorToBrushConverter}}"/>
                    </DockPanel>

                    <TextBlock Grid.Row="7" Grid.Column="0" Text="Obstruction Demolish Rate:"/>
                    <DockPanel Grid.Row="7" Grid.Column="1" HorizontalAlignment="Stretch" Margin="3" Dock="Right">
                        <TextBlock Text="1 /"/>
                        <TextBox Text="{Binding ObstructionDemolishDenominator, UpdateSourceTrigger=PropertyChanged}"
                                 Background="{Binding ObstructionColor, Converter={StaticResource ColorToBrushConverter}}"/>
                    </DockPanel>

                    <TextBlock Grid.Row="8" Grid.Column="0" Text="Damp Spread Rate:"/>
                    <DockPanel Grid.Row="8" Grid.Column="1" HorizontalAlignment="Stretch" Margin="3" Dock="Right">
                        <TextBlock Text="1 /"/>
                        <TextBox Text="{Binding DampSpreadDenominator, UpdateSourceTrigger=PropertyChanged}"
                                 Background="{Binding DampColor, Converter={StaticResource ColorToBrushConverter}}"/>
                    </DockPanel>
                </Grid>    
            </Controls:Flyout>

            <Controls:Flyout Header="Debug" Position="Bottom" IsPinned="False">
                <Grid Margin="3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="200"/>
                    </Grid.ColumnDefinitions>

                    <Grid.Resources>
                        <Converters:BoolToActiveStringConverter x:Key="BoolToActiveStringConverter" />
                        <Converters:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
                    
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Margin" Value="3,3,3,3"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                        </Style>
                    </Grid.Resources>

                    <!--<Grid.ShowGridLines>True</Grid.ShowGridLines>-->

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Update count:"/>
                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding UpdateCount}" Margin="3"/>
                    
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Turn count:"/>
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding TurnCount}" Margin="3"/>

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Weather damp:"/>
                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding WeatherDampLevel}" Margin="3"/>

                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Weather heat:"/>
                    <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding WeatherHeatLevel}" Margin="3"/>
                </Grid>
            </Controls:Flyout>
            
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>

        <ScrollViewer Grid.Column="0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" HorizontalContentAlignment="Right">
            <Viewbox Stretch="Uniform">
                <Views:EcosystemView DataContext="{Binding EcosystemViewModel}"/>
            </Viewbox>
        </ScrollViewer>

        <GridSplitter Grid.Row="0" Grid.Column="1" Visibility="Visible" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns" Width="5"/>
        
        <ScrollViewer Grid.Column="2" VerticalScrollBarVisibility="Auto">
            <Views:OrganismSynopsisView DataContext="{Binding OrganismSynopsisViewModel}"/>
        </ScrollViewer>
    </Grid>

</Controls:MetroWindow>
